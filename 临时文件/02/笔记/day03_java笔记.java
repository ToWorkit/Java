1：基础语法->比较运算符

	运算符	运算规则	范例	    结果
	 ==       相等于    2==1		false
	 !=       不等于    2!=1        true
	 <         小于     2<1         false
	 >         大于     2>1         true
	 <=       小于等于  3<=3        true
	 >=       大于等于  4>=3        true
	 
	 比较符号两边的数据
	 
2：基础语法->逻辑运算符

	运算符	运算规则	范例	    结果
	 &        与      false&true     false
	 |        或      false|true     true
	 ^        异或    false^true    true
	 !        取反    ！false       true
	 &&      短路与   false&&true   false
	 ||      短路或   false||true   true
	 
	 短路与，一边是false，另一边不运行（提升效率）
	 短路或，一边是true,另一边就不运行了
	 
3：基础语法->三元运算符	

	三元运算符
			公式：
				布尔表达式?结果1：结果2
				
4：基础语法->商品库存案例

	1 实现表头  固定的数据 输出语句sop
	2 表中间	商品的数据 采用变量的形式 定义变量
	3 表尾	    一部分数据固定 另外一部分进行计算 运算符
	
5；基础语法->引用数据类型

	格式：
		数据类型  变量名 = new 数据类型();//new->新建的意思
		
	调用功能：
		变量名.方法名();
	
6：基础语法->Scanner类的使用

	java已经有了很多类，直接拿来用就可以了
	
	属于引用数据类型
	  1.导包
	  2.公式，创建Scanner变量
	  3.变量.，使用Scanner类的功能
	  
7：基础语法->随机数类的使用

	引用数据类型，用来产生随机数的类Random.
	
8：基础语法->if语句

	第一种：if属于流程控制语句
	选择结构if
	if语句：如果满足某种条件，就进行某种处理。条件限制。
	
		if(条件语句){
			
			执行语句;
		}
	
	第二种：if...else
		
		如果...否则
		if(判断条件){
			执行语句1
			....
			
		}else{
			执行语句2
			....
			
		}
		
	第三种：if...else if...else
	
	if(条件){
		执行体
		
	}else if(条件){
		执行体
	}else if(条件){
		执行体
	}else{
		else的执行体
	}
	
9：基础语法->while循环

	编写格式：
		while(条件){
			循环体
		}
	注意：需要指定结束，否则会出现死循环