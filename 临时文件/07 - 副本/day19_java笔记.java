1：集合框架->迭代器的转型问题


2：集合框架->增强for循环

	jdk1.5之后出现的高级for循环。专门用来遍历数组和集合的。它的内部原理，其实就是Iterator迭代器
	。
	
3：集合框架->泛型的引用


4：集合框架->List接口的特点

	有序的Collection,怎么存怎么拿。顺序相同（序列）。此接口的用户，可以对列表中的每个元素的
	插入位置进行准确的控制。可以根据元素的整数索引来搜索列表当中的元素。
	与Set不同的是，链表通常允许重复的元素。
	
5：集合框架->List集合存放数据的结构

	List接口下有很多集合，它们存储元素所采用的方式是不同的。这些集合有各自的特点。
	供给我们在不同环境下使用。
	数据存储的常用的结构：
	
	堆栈：采用这个结构的集合，堆与安娜苏存储有以下的特点：
		  先进后出，元素先进来，后出去。在内存中开辟空间。
		  
	队列：先进先出，和排队一样。也在内存中开辟空间。
	
	数组：查找元素快，通过所以快速的访问指定位置的元素。定长！
		  增删元素慢。 -> 指定位置添加元素会先将元素复制一份放到一个新数组中
		  
	链表：链子，多个节点间，
	
		  查找元素慢：数组地址连续的，链表不一定！
		  增删元素快：只需要修改连接下一个元素的地址即可。
		  
	ArrayList集合：
		本身就是一个数组（底层数组做的）.List接口的大小是可变数组的实现。插叙快，
		增删慢。线程不安全的，跑的快。
		
		容器本身默认大小10个
		
		主要功能：存、取，最常用的集合！
		
		查询：ArrayList
		增删：linkedList
		
	LinkedList本身特点：
		链表的实现，增删快，查询慢！可以单独操作链表的开头，也可以单独操作链表的结尾。
		  